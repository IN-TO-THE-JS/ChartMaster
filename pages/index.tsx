import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "../styles/Home.module.css";
import Link from "next/link";
import { charts } from "../data/charts";
import { useEffect, useState } from "react";
import axios from "axios";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
    const [myChart, setMyChart] = useState(charts);

    const fetchData = async () => {
        for (let ctgry of myChart) {
            for (let chart of ctgry.ctgry_charts) {
                try {
                    const result = await axios.get(
                        `/chart/${chart.chart_code}`
                    );
                    if (result.status === 200) {
                        chart.isDone = 1;
                    }
                } catch (err) {
                    // console.log(err)
                }
            }
        }
        setMyChart([...myChart]);
    };

    useEffect(() => {
        fetchData();
    }, []);

    return (
        <>
            <Head>
                <title>Create Next App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className={styles.main}>
                <header>
                    <Link href="/">
                        <img src="/logo.png" />
                    </Link>
                </header>

                <div>Choose a template</div>

                {myChart.map((ctgry, i) => {
                {charts.map((ctgry) => {
                    return (
                        <ul>
                            <h3>{ctgry.ctgry_name}</h3>
                            <span>{ctgry.ctgry_disc}</span>
                            {ctgry.ctgry_charts.map((chart, j) => {
                                return (
                                    <li key={chart.chart_code}>
                                        <Link
                                            href={`/chart/${chart.chart_code}`}
                                        >
                                            <div>
                                                <img
                                                    src={`/img/${ctgry.ctgry_imgtag}_${j}.png`}
                                                    style={{
                                                        opacity: chart.isDone
                                                            ? chart.isDone
                                                            : 0.05,
                                                    }}
                                                />
                                            </div>
                                            <h4>{chart.chart_name}</h4>
                                        </Link>
                                    </li>
                                );
                            })}
                        </ul>
                    );
                })}
                <footer>footer</footer>
            </main>
        </>
    );
}
